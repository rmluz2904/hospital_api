// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hospital_api.DB;

#nullable disable

namespace hospital_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250519195924_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hospital_api.Model.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HospitalId");

                    b.ToTable("Hospitais");
                });

            modelBuilder.Entity("hospital_api.Model.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PacienteId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("hospital_api.Model.ProfissionalSaude", b =>
                {
                    b.Property<int>("ProfissionalSaudeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissionalSaudeId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hospital")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProfissionalSaude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroMecanografico")
                        .HasColumnType("int");

                    b.HasKey("ProfissionalSaudeId");

                    b.ToTable("ProfissionaisSaude");

                    b.HasDiscriminator().HasValue("ProfissionalSaude");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("hospital_api.Model.Enfermeiro", b =>
                {
                    b.HasBaseType("hospital_api.Model.ProfissionalSaude");

                    b.Property<int>("EnfermeiroId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroOrdemEnfermeiros")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Enfermeiro");
                });

            modelBuilder.Entity("hospital_api.Model.Medico", b =>
                {
                    b.HasBaseType("hospital_api.Model.ProfissionalSaude");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroOrdemMedicos")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Medico");
                });
#pragma warning restore 612, 618
        }
    }
}
